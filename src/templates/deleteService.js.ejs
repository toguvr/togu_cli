import AppError from '@shared/errors/AppError';

import { inject, injectable } from 'tsyringe';

import I<%= props.nameUpperFirstCase %>Repository from '../repositories/I<%= props.nameUpperFirstCase %>Repository';
import <%= props.nameUpperFirstCase %> from '../infra/typeorm/entities/<%= props.nameUpperFirstCase %>';


interface ISearch {
  <%= props.name %>Id: string;
  user_id: string;
}

@injectable()
class Delete<%= props.nameUpperFirstCase %>Service {
  constructor(
    @inject('<%= props.nameUpperFirstCase %>Repository')
    private <%= props.name %>Repository: I<%= props.nameUpperFirstCase %>Repository,

    @inject('EnterprisesRepository')
    private enterprisesRepository: IEnterprisesRepository,
  ) {}

  public async execute({
    <%= props.name %>Id,
    user_id,
  }: ISearch): Promise<<%= props.nameUpperFirstCase %>> {
    const <%= props.name %> = await this.<%= props.name %>Repository.findById(<%= props.name %>Id);

    if (!<%= props.name %>) {
      throw new AppError('Item n√£o existe.');
    }

    const result = await this.<%= props.name %>Repository.delete(<%= props.name %>);

    return result;
  }

}

export default Delete<%= props.nameUpperFirstCase %>Service;
